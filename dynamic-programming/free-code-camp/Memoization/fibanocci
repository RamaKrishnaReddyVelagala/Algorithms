"""
# # write a code to take the value and gives its th number in a fibancci number.

def fib(n):
    if n == 1 or n ==2:
        return 1
        
    else:
        return fib(n-1)+fib(n-2)

print(fib(2))
print(fib(7))
print(fib(10))
# print(fib(50))


# Time complexity : O(2^n)
# space complexity : O(n)

"""

# Memoization:
memo = {}
def fib(n):
    if n == 1 or n ==2:
        return 1
    if n in memo:
        return memo[n]
    memo[n] = fib(n-1)+fib(n-2)
    return memo[n]

print(fib(2))
print(fib(7))
print(fib(10))
print(fib(50))